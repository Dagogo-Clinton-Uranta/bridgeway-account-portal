{"ast":null,"code":"import { CART_REMOVE_ITEM, CART_ADD_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants.js';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/dagogo/Desktop/bridgeway-kids/frontend/src/reducers/cartReducers.js"],"names":["CART_REMOVE_ITEM","CART_ADD_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA,SAAQA,gBAAR,EACQC,aADR,EAEQC,0BAFR,EAGQC,wBAHR,QAGuC,+BAHvC;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAC,EAAX;AAAeC,EAAAA,eAAe,EAAC;AAA/B,CAAT,EAA6CC,MAA7C,KAAwD;AAE3E,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKR,aAAL;AACE,YAAMS,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AAEA,UAAGH,SAAH,EAAa;AACX,eAAM,EACJ,GAAGP,KADC;AAEJC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAiCL,IAAjC,GAAwCI,CAAjE;AAFP,SAAN;AAIA,OALF,MAKM;AACL,eAAM,EACJ,GAAGT,KADC;AAEJC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAoBI,IAApB;AAFN,SAAN;AAID;;AAEF,SAAKV,gBAAL;AACG,aAAO,EAAC,GAAGK,KAAJ;AACPC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAwBH,CAAD,IAAKA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AADJ,OAAP;;AAIF,SAAKT,0BAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AACRE,QAAAA,eAAe,EAAEC,MAAM,CAACG;AADhB,OAAP;;AAIJ,SAAKR,wBAAL;AACE,aAAO,EAAC,GAAGE,KAAJ;AACRa,QAAAA,aAAa,EAAEV,MAAM,CAACG;AADd,OAAP;;AAGF;AAAS,aAAON,KAAP;AAhCT;AAkCP,CApCM","sourcesContent":["import {CART_REMOVE_ITEM,\n        CART_ADD_ITEM,\n        CART_SAVE_SHIPPING_ADDRESS,\n        CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants.js'\n\n\nexport const cartReducer = (state = {cartItems:[], shippingAddress:{}}, action) => {\n\n        switch(action.type){\n         case CART_ADD_ITEM :\n           const item = action.payload\n\n           const existItem = state.cartItems.find(x => x.product === item.product)\n\n           if(existItem){\n             return{\n               ...state,\n               cartItems: state.cartItems.map(x => x.product === existItem.product ?item : x )\n             }\n            }else{\n            return{\n              ...state,\n              cartItems:[...state.cartItems,item]\n            }\n          }\n           \n         case CART_REMOVE_ITEM :\n            return {...state,\n            cartItems: state.cartItems.filter((x)=>x.product !== action.payload)\n                }\n\n          case CART_SAVE_SHIPPING_ADDRESS :\n            return {...state,\n           shippingAddress: action.payload\n        }\n\n        case CART_SAVE_PAYMENT_METHOD :\n          return {...state,\n         paymentMethod: action.payload\n      }\n        default: return state\n      }\n}\n"]},"metadata":{},"sourceType":"module"}