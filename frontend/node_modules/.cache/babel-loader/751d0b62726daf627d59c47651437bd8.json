{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Message.js';\nimport { login } from '../actions/userActions.js';\nimport FormContainer from '../components/FormContainer.js';\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  //he is taking location & history out of the props, normally it is props.location\n  const [email, setEmail] = useState(''); //component level state right here, not application level state\n\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch(); //dont forget that real dispatches only take place in action creators, you are only calling useDispatch here\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const redirect = location.search ? location.search.split('=')[1] : '/'; //location .search has the url query string, study it a bit\n  //because we dont want to able to come into the login screen ONCE WE ARE ALREADY LOGGED IN, effect this in the useEffect below\n\n  useEffect(() => {\n    if (userInfo) {\n      //cuz user info exists only when you're logged in\n      history.push(redirect);\n    }\n  }, [redirect, history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //this is where we want to to call our action to dispatch login\n\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"containerBox\",\n      children: /*#__PURE__*/_jsxDEV(FormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"  Email Address \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"enter email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"  Password  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"py-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [\"                       \", \"New Customer?\", /*#__PURE__*/_jsxDEV(Link, {\n              to:\n              /*redirect?`$register/redirect=${redirect}`:*/\n              '/register',\n              children: \" Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoginScreen, \"aTfUGHzzVjmMdkWv7+vBp/tSajw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","login","FormContainer","LoginScreen","location","history","email","setEmail","password","setPassword","dispatch","userLogin","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState ,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message.js'\nimport Loader from '../components/Message.js'\nimport {login} from '../actions/userActions.js'\nimport FormContainer from '../components/FormContainer.js'\n\n\n\n\n\nconst LoginScreen = ({location, history}) => { //he is taking location & history out of the props, normally it is props.location\n  const [email,setEmail] = useState('')  //component level state right here, not application level state\n  const [password,setPassword] = useState('')\n  const dispatch = useDispatch() //dont forget that real dispatches only take place in action creators, you are only calling useDispatch here\n  const userLogin = useSelector(state => state.userLogin);\n  const {loading, error,userInfo } = userLogin\n  \n\n  const redirect = location.search?location.search.split('=')[1]:'/'\n//location .search has the url query string, study it a bit\n\n//because we dont want to able to come into the login screen ONCE WE ARE ALREADY LOGGED IN, effect this in the useEffect below\n\n  useEffect( () => {\n    if(userInfo){ //cuz user info exists only when you're logged in\n       history.push(redirect)\n    }\n  },[redirect,history,userInfo])\n\n\n\n  const submitHandler = (e) => {\n          e.preventDefault()\n          //this is where we want to to call our action to dispatch login\n        dispatch(login(email,password))\n  }\n\n    return (\n      <center>\n        <Card className='containerBox'>\n       <FormContainer>\n        <h1>Sign in</h1>\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader/>}\n        <Form onSubmit={submitHandler}>\n         <Form.Group controlId='email'>\n\n          <Form.Label>  Email Address </Form.Label>\n          <Form.Control type='email' placeholder=\"enter email\" value={email} onChange={(e)=>setEmail(e.target.value)}></Form.Control>\n           {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n         </Form.Group>\n\n         <Form.Group controlId='password'>\n\n          <Form.Label>  Password  </Form.Label>\n          <Form.Control type='password' placeholder=\"enter password\" value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n\n         </Form.Group>\n\n          <Button type='submit' variant='primary'>Sign In</Button>\n        </Form>\n\n        <Row className='py-3'>\n         <Col>                       {/*youre cheating hera, youre supposed to uncomment whats below */}\n           New Customer?<Link to={/*redirect?`$register/redirect=${redirect}`:*/'/register'}> Register</Link>\n         </Col>                       \n        </Row>              \n\n       </FormContainer>\n       </Card>\n       </center>\n    )\n\n}\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}