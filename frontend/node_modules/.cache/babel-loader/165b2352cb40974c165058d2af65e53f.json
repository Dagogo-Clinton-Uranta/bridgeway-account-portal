{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAILURE, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAILURE, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAILURE, ORDER_APPROVE_REQUEST, ORDER_APPROVE_SUCCESS, ORDER_APPROVE_FAILURE //ORDER_PAY_RESET,\n, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAILURE, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAILURE, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAILURE //ORDER_DELIVER_RESET,\n} from '../constants/orderConstants';\nimport axios from 'axios';\n/*the entire order object*/\n\nexport const createOrder = order => async (dispatch, getState) => {\n  //redux thunk was used just now in the form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send he headers a content type of application/json\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  //form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send the headers a content type of application/json\n\n    const config = {\n      headers: {\n        //'Content-Type':'application/json' |you dont really need content type in GET requests for some reason\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n      /*this data variable is file specific*/\n\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  //form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send he headers a content type of application/json\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n    /*this data variable is file specific\n    export const getOrderDetails  = (id/*this is not the entire object, just an order id*/\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  //form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send he headers a content type of application/json\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n    /*this data variable is file specific*/\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  //form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send he headers a content type of application/json\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n      /*this data variable is file specific*/\n\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = (vendorName = ''\n/*try a reg ex of all allowable characters, not just an empty object */\n) => async (dispatch, getState) => {\n  //form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send he headers a content type of application/json\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders?vendorName=${vendorName}`, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n      /*this data variable is file specific*/\n\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const merchantApproveOrder = (orderId, productId, updatedQty) => async (dispatch, getState) => {\n  //redux thunk was used just now in the form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_APPROVE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send he headers a content type of application/json\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders`, {\n      orderId,\n      productId,\n      updatedQty\n    }, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_APPROVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_APPROVE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const merchantLockOrder = order => async (dispatch, getState) => {\n  //redux thunk was used just now in the form of async (dispatch) above\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState(); //we do config cus we wanna send he headers a content type of application/json\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config); //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/dagogo/Desktop/bridgeway-kids/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAILURE","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILURE","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAILURE","ORDER_APPROVE_REQUEST","ORDER_APPROVE_SUCCESS","ORDER_APPROVE_FAILURE","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAILURE","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAILURE","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAILURE","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders","vendorName","merchantApproveOrder","productId","updatedQty","merchantLockOrder"],"mappings":"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","sourcesContent":["import {ORDER_CREATE_REQUEST,\n        ORDER_CREATE_SUCCESS,\n        ORDER_CREATE_FAILURE,\n        ORDER_DETAILS_REQUEST,\n        ORDER_DETAILS_SUCCESS,\n        ORDER_DETAILS_FAILURE,\n        ORDER_PAY_REQUEST,\n        ORDER_PAY_SUCCESS,\n        ORDER_PAY_FAILURE,\n        ORDER_APPROVE_REQUEST,\n        ORDER_APPROVE_SUCCESS,\n        ORDER_APPROVE_FAILURE,\n        //ORDER_PAY_RESET,\n        ORDER_LIST_MY_REQUEST,\n        ORDER_LIST_MY_SUCCESS,\n        ORDER_LIST_MY_FAILURE,\n        ORDER_LIST_REQUEST,\n        ORDER_LIST_SUCCESS,\n        ORDER_LIST_FAILURE,\n        ORDER_DELIVER_REQUEST,\n        ORDER_DELIVER_SUCCESS,\n        ORDER_DELIVER_FAILURE\n        //ORDER_DELIVER_RESET,\n       } from '../constants/orderConstants'\nimport axios from 'axios'\n                              /*the entire order object*/\nexport const createOrder  = (order) => async (dispatch,getState)=> {\n   //redux thunk was used just now in the form of async (dispatch) above\n  try {\n    dispatch({type: ORDER_CREATE_REQUEST})\n\n     const {userLogin:{userInfo}} = getState()\n    //we do config cus we wanna send he headers a content type of application/json\n    const config = {\n      headers:{\n        'Content-Type':'application/json',\n        Authorization:`Bearer ${userInfo.token}`\n      }\n    }\n    const {data} = await axios.post(`/api/orders`,order,config)\n    //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n              type: ORDER_CREATE_SUCCESS,\n              payload:data })\n\n  }\n   catch(error){\n     dispatch({type:ORDER_CREATE_FAILURE,\n               payload: error.response && error.response.data.message?\n                error.response.data.message:error.message })\n   }\n}\n\n\nexport const getOrderDetails  = (id) => async (dispatch,getState)=> {\n//form of async (dispatch) above\n  try {\n    dispatch({type: ORDER_DETAILS_REQUEST})\n\n     const {userLogin:{userInfo}} = getState()\n    //we do config cus we wanna send the headers a content type of application/json\n    const config = {\n      headers:{\n        //'Content-Type':'application/json' |you dont really need content type in GET requests for some reason\n        Authorization:`Bearer ${userInfo.token}`\n      }\n    }\n    const {data} = await axios.get(`/api/orders/${id}`,config)\n    //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n              type: ORDER_DETAILS_SUCCESS,\n              payload:data /*this data variable is file specific*/\n\n    })\n\n  }\n   catch(error){\n     dispatch({type:ORDER_DETAILS_FAILURE,\n               payload: error.response && error.response.data.message?\n                error.response.data.message:error.message })\n   }\n}\n\n\n\nexport const payOrder  = (orderId,paymentResult) => async (dispatch,getState) =>{\n//form of async (dispatch) above\n  try {\n    dispatch({type: ORDER_PAY_REQUEST})\n\n     const {userLogin:{userInfo}} = getState()\n    //we do config cus we wanna send he headers a content type of application/json\n    const config = {\n      headers:{\n        'Content-Type':'application/json',\n        Authorization:`Bearer ${userInfo.token}`\n      }\n    }\n    const {data} = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\n    //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n              type: ORDER_PAY_SUCCESS,\n              payload:data\n            })/*this data variable is file specific\nexport const getOrderDetails  = (id/*this is not the entire object, just an order id*/\n\n\n  }\n   catch(error){\n     dispatch({type:ORDER_PAY_FAILURE,\n               payload: error.response && error.response.data.message?\n                error.response.data.message:error.message })\n   }\n}\n\n\nexport const deliverOrder  = (order) => async (dispatch,getState)=> {\n//form of async (dispatch) above\n  try {\n    dispatch({type: ORDER_DELIVER_REQUEST})\n\n     const {userLogin:{userInfo}} = getState()\n    //we do config cus we wanna send he headers a content type of application/json\n    const config = {\n      headers:{\n        Authorization:`Bearer ${userInfo.token}`\n      }\n    }\n    const {data} = await axios.put(`/api/orders/${order._id}/deliver`,{},config)\n    //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n              type: ORDER_DELIVER_SUCCESS,\n              payload:data\n            })/*this data variable is file specific*/\n\n\n\n  }\n   catch(error){\n     dispatch({type:ORDER_DELIVER_FAILURE,\n               payload: error.response && error.response.data.message?\n                error.response.data.message:error.message })\n   }\n}\n\n\nexport const listMyOrders  = () => async (dispatch,getState)=> {\n//form of async (dispatch) above\n  try {\n    dispatch({type: ORDER_LIST_MY_REQUEST})\n\n     const {userLogin:{userInfo}} = getState()\n    //we do config cus we wanna send he headers a content type of application/json\n    const config = {\n      headers:{\n\n        Authorization:`Bearer ${userInfo.token}`\n      }\n    } \n    const {data} = await axios.get(`/api/orders/myorders`,config)\n    //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n              type: ORDER_LIST_MY_SUCCESS,\n              payload:data /*this data variable is file specific*/\n\n\n\n    })\n  }\n   catch(error){\n     dispatch({type:ORDER_LIST_MY_FAILURE,\n               payload: error.response && error.response.data.message?\n                error.response.data.message:error.message })\n   }\n}\n\n\nexport const listOrders  = (vendorName=''/*try a reg ex of all allowable characters, not just an empty object */) => async (dispatch,getState)=> {\n//form of async (dispatch) above\n  try {\n    dispatch({type: ORDER_LIST_REQUEST})\n\n     const {userLogin:{userInfo}} = getState()\n    //we do config cus we wanna send he headers a content type of application/json\n    const config = {\n      headers:{\n\n        Authorization:`Bearer ${userInfo.token}`\n      }\n    }\n    const {data} = await axios.get(`/api/orders?vendorName=${vendorName}`,config)\n    //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n    dispatch({\n              type: ORDER_LIST_SUCCESS,\n              payload:data /*this data variable is file specific*/\n\n\n\n    })\n  }\n   catch(error){\n     dispatch({type:ORDER_LIST_FAILURE,\n               payload: error.response && error.response.data.message?\n                error.response.data.message:error.message })\n   }\n}\n\n\nexport const merchantApproveOrder  = (orderId,productId,updatedQty) => async (dispatch,getState)=> {\n  //redux thunk was used just now in the form of async (dispatch) above\n try {\n   dispatch({type: ORDER_APPROVE_REQUEST})\n\n    const {userLogin:{userInfo}} = getState()\n   //we do config cus we wanna send he headers a content type of application/json\n   const config = {\n     headers:{\n       'Content-Type':'application/json',\n       Authorization:`Bearer ${userInfo.token}`\n     }\n   }\n   const {data} = await axios.put(`/api/orders`,{orderId,productId,updatedQty},config)\n   //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n   dispatch({\n             type: ORDER_APPROVE_SUCCESS,\n             payload:data })\n\n }\n  catch(error){\n    dispatch({type:ORDER_APPROVE_FAILURE,\n              payload: error.response && error.response.data.message?\n               error.response.data.message:error.message })\n  }\n}\n\n\nexport const merchantLockOrder  = (order) => async (dispatch,getState)=> {\n  //redux thunk was used just now in the form of async (dispatch) above\n try {\n   dispatch({type: ORDER_CREATE_REQUEST})\n\n    const {userLogin:{userInfo}} = getState()\n   //we do config cus we wanna send he headers a content type of application/json\n   const config = {\n     headers:{\n       'Content-Type':'application/json',\n       Authorization:`Bearer ${userInfo.token}`\n     }\n   }\n   const {data} = await axios.post(`/api/orders`,order,config)\n   //i'm gonna take a stab here and say that the third argument for axios is for setting header property\n\n   dispatch({\n             type: ORDER_CREATE_SUCCESS,\n             payload:data })\n\n }\n  catch(error){\n    dispatch({type:ORDER_CREATE_FAILURE,\n              payload: error.response && error.response.data.message?\n               error.response.data.message:error.message })\n  }\n}"]},"metadata":{},"sourceType":"module"}