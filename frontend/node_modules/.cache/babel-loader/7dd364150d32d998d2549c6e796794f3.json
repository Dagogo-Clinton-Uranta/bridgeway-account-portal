{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Message.js';\nimport showAccountDetails from '../actions/accountActions.js';\nimport FormContainer from '../components/FormContainer.js';\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  //he is taking location & history out of the props, normally it is props.location\n  const [accountNumber, setAccountNumber] = useState(''); //component level state right here, not application level state\n\n  /*const [password,setPassword] = useState('')\n  const dispatch = useDispatch() \n  const userLogin = useSelector(state => state.userLogin);\n  const {loading, error,userInfo } = userLogin*/\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'; //location .search has the url query string, study it a bit\n  //because we dont want to able to come into the login screen ONCE WE ARE ALREADY LOGGED IN, effect this in the useEffect below\n\n  /*useEffect( () => {\n    if(userInfo){ //cuz user info exists only when you're logged in\n       history.push(redirect)\n    }\n  },[redirect,history,userInfo])*/\n\n  /* const submitHandler = (e) => {\n           e.preventDefault()\n           //this is where we want to to call our action to dispatch login\n         dispatch(showAccountDetails(accountNumber))\n   }*/\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"containerBox\",\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"welcomeFont\",\n          children: \"Welcome to Bridgeway Kids!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please, type in your account number below, and click 'view balance' to see your current balance for the day. If you withdraw or deposit money, please come back tommorrow to see any changes to your balance. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"accountNumber\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Account Number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"accountInput\",\n            type: \"input\",\n            placeholder: \"enter your account number\",\n            value: accountNumber,\n            onChange: e => setAccountNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/viewbalance/${accountNumber}`,\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              className: \"vbButton\",\n              variant: \"primary\",\n              children: \"View Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginScreen, \"l3HiL9iN5rVhzgYTgBxN+WK4E1U=\");\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","Card","useDispatch","useSelector","Message","Loader","showAccountDetails","FormContainer","LoginScreen","location","history","accountNumber","setAccountNumber","redirect","search","split","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,QAA2C,iBAA3C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAAA;;AAAE;AAC7C,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmClB,QAAQ,CAAC,EAAD,CAAjD,CAD2C,CACY;;AACvD;AACF;AACA;AACA;;AAGE,QAAMmB,QAAQ,GAAGJ,QAAQ,CAACK,MAAT,GAAgBL,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAhB,GAA8C,GAA/D,CAR2C,CAS7C;AAEA;;AAEE;AACF;AACA;AACA;AACA;;AAIC;AACD;AACA;AACA;AACA;;AAEI,sBAEI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,2BACD,QAAC,aAAD;AAAA,8BACA;AAAA,qCAAS;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAIE;AAAA,gCAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR,eAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKA,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,eAAtB;AAAA,kCAEC,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,SAAS,EAAC,cAAxB;AAAuC,YAAA,IAAI,EAAC,OAA5C;AAAoD,YAAA,WAAW,EAAC,2BAAhE;AAA4F,YAAA,KAAK,EAAEJ,aAAnG;AAAkH,YAAA,QAAQ,EAAGK,CAAD,IAAKJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjJ;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASC;AAAA,uCAAS,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,gBAAeP,aAAc,EAAxC;AAAA,yCAA4C,QAAC,MAAD;AAAS,cAAA,SAAS,EAAC,UAAnB;AAA8B,cAAA,OAAO,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,UAFJ;AAyBH,CApDD;;GAAMH,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React, {useState ,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form, Button, Row, Col, Card} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message.js'\nimport Loader from '../components/Message.js'\nimport showAccountDetails from '../actions/accountActions.js'\nimport FormContainer from '../components/FormContainer.js'\n\n\n\n\n\nconst LoginScreen = ({location, history}) => { //he is taking location & history out of the props, normally it is props.location\n  const [accountNumber,setAccountNumber] = useState('')  //component level state right here, not application level state\n  /*const [password,setPassword] = useState('')\n  const dispatch = useDispatch() \n  const userLogin = useSelector(state => state.userLogin);\n  const {loading, error,userInfo } = userLogin*/\n  \n\n  const redirect = location.search?location.search.split('=')[1]:'/'\n//location .search has the url query string, study it a bit\n\n//because we dont want to able to come into the login screen ONCE WE ARE ALREADY LOGGED IN, effect this in the useEffect below\n\n  /*useEffect( () => {\n    if(userInfo){ //cuz user info exists only when you're logged in\n       history.push(redirect)\n    }\n  },[redirect,history,userInfo])*/\n\n\n\n /* const submitHandler = (e) => {\n          e.preventDefault()\n          //this is where we want to to call our action to dispatch login\n        dispatch(showAccountDetails(accountNumber))\n  }*/\n\n    return (\n      \n        <Card className='containerBox'>\n       <FormContainer >\n       <center> <h2 className='welcomeFont'>Welcome to Bridgeway Kids!</h2></center>\n        {/*error && <Message variant='danger'>{error}</Message>*/}\n        {/*loading && <Loader/>*/}\n         <center><strong>Instructions:</strong><p>Please, type in your account number below, and click 'view balance' to see your current balance for the day. If you withdraw or deposit money, please come back tommorrow to see any changes to your balance. </p></center>\n       <Form >\n         <Form.Group controlId='accountNumber'>\n\n          <Form.Label>  Account Number: </Form.Label>\n          <Form.Control className='accountInput' type='input' placeholder=\"enter your account number\" value={accountNumber} onChange={(e)=>setAccountNumber(e.target.value)}></Form.Control>\n           {/*the value of form control is form control from the state. */}\n         </Form.Group>\n\n\n        <center> <Link to={`/viewbalance/${accountNumber}`}> <Button  className='vbButton' variant='primary'>View Balance</Button></Link></center>\n        </Form>         \n\n       </FormContainer>\n       </Card>\n       \n    )\n\n}\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}