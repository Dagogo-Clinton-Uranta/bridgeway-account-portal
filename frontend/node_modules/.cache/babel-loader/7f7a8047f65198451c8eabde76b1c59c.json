{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/UpdateCabaScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Loader.js';\nimport { listProductDetails, updateProduct } from '../actions/productActions.js';\nimport FormContainer from '../components/FormContainer.js';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants.js';\n\nconst UpdateCabaScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  //he is taking location & history out of the props, normally it is props.location\n  const productId = match.params.id;\n  const [name, setName] = useState(''); //const [email,setEmail] = useState('')\n\n  const [price, setPrice] = useState(0); //component level state right here, not application level state\n\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch(); //dont forget that real dispatches only take place in action creators, you are only calling useDispatch here\n\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      console.log('hi');\n      /*history.push('/login')*/\n    }\n  }, [userInfo, history]);\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product.id !== productId) {\n        //we are just checking any aspect of the user here to see if user object exists\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name); //setEmail(product.email)\n\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, productId, history, successUpdate, product]);\n  /*i deleted user as a useEffect dependency */\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0]; //we get access to this as an array, because you have the ability to upload multiple files\n\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      brand,\n      category,\n      image,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Create / Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [\"      \", /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), \"        \", /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Price \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), \"      \", /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter image url\",\n            value: price,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"choose file\",\n            custom: true,\n            onChange: uploadFileHandler,\n            children: uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), \"      \", /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Brand \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }, this), \"        \", /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Count in Stock \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter count in stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), \"        \", /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), \"       \", /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"  Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateCabaScreen, \"PuJSTclpT0XtJvKmNoReUJuY7ds=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UpdateCabaScreen;\nexport default UpdateCabaScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCabaScreen\");","map":{"version":3,"sources":["/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/UpdateCabaScreen.js"],"names":["axios","React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","listProductDetails","updateProduct","FormContainer","PRODUCT_UPDATE_RESET","UpdateCabaScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","userLogin","userInfo","console","log","type","push","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","submitHandler","preventDefault","_id","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React ,{useState ,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form, Button} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message.js'\nimport Loader from '../components/Loader.js'\nimport {listProductDetails, updateProduct} from '../actions/productActions.js'\nimport FormContainer from '../components/FormContainer.js'\nimport {PRODUCT_UPDATE_RESET} from '../constants/productConstants.js'\n\n\n\n\nconst UpdateCabaScreen= ({match, history}) => { //he is taking location & history out of the props, normally it is props.location\n    const productId = match.params.id\n\n  const [name,setName] = useState('')\n  //const [email,setEmail] = useState('')\n  const [price,setPrice] = useState(0)  //component level state right here, not application level state\n  const [image,setImage] = useState('')\n  const [brand,setBrand] = useState('')\n  const [category,setCategory] = useState('')\n  const [countInStock,setCountInStock] = useState('')\n  const [description,setDescription] = useState('')\n  const [uploading,setUploading] = useState(false)\n\n  \n  const dispatch = useDispatch() //dont forget that real dispatches only take place in action creators, you are only calling useDispatch here\n\n  const productDetails = useSelector(state => state.productDetails);\n  const {loading, error,product} = productDetails\n\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {loading:loadingUpdate, error:errorUpdate,success:successUpdate } = productUpdate\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {userInfo } = userLogin\n\n  useEffect(()=> { \n    if(!userInfo){\n     console.log('hi') /*history.push('/login')*/}\n    },[userInfo,history])\n\n  useEffect( () => {\n    if(successUpdate){\n      dispatch({type:PRODUCT_UPDATE_RESET})\n      history.push('/admin/productlist')\n    } \n    else{\n      if(!product.name ||product.id !== productId){ //we are just checking any aspect of the user here to see if user object exists\n        dispatch(listProductDetails(productId))\n      }else {\n        setName(product.name)\n        //setEmail(product.email)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n\n},[dispatch,productId,history,successUpdate,product]) /*i deleted user as a useEffect dependency */\n\nconst uploadFileHandler =async (e)=>{\n  const file = e.target.files[0] //we get access to this as an array, because you have the ability to upload multiple files\n  const formData = new FormData()\n  formData.append('image',file)\n  setUploading(true)\n\n   try{\n     const config ={\n     headers:{ \n       'Content-Type':'multipart/form-data'\n     }\n    }\n     const {data} =await axios.post('/api/upload', formData ,config)\n     setImage(data)\n     setUploading(false)\n   }\n   catch(error){\n      console.log(error)\n     setUploading(false)\n   }\n}\n\n  const submitHandler = (e) => {\n          e.preventDefault()\n  dispatch(updateProduct({\n    _id:productId,\n    name,\n    price,\n    brand,\n    category,\n    image,\n    description,\n    countInStock\n  }))\n\n  }\n\n    return (\n        <>\n    <Link to='/admin/productlist' className='btn btn-light my-3'>Go back</Link>\n\n    <FormContainer>\n    <h1> Create / Edit Product</h1>\n   {loadingUpdate &&<Loader/>}\n    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n    {loading? <Loader/>:error?<Message variant='danger'>{error}</Message>:(\n      <Form onSubmit={submitHandler}>\n {/*1*/}      <Form.Group controlId='name'>\n\n       <Form.Label>  Name</Form.Label>\n       <Form.Control type='name' placeholder=\"enter name\" value={name} onChange={(e)=>setName(e.target.value)}></Form.Control>\n        {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n      </Form.Group>\n\n {/*2*/}        <Form.Group controlId='price'>\n\n        <Form.Label>  Price </Form.Label>\n        <Form.Control type='number' placeholder=\"enter price\" value={price} onChange={(e)=>setPrice(e.target.value)}></Form.Control>\n         {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n       </Form.Group>\n\n {/*3*/}      <Form.Group controlId='image'>\n\n        <Form.Label>  Image </Form.Label>\n        <Form.Control type='text' placeholder=\"Enter image url\" value={price} onChange={(e)=>setImage(e.target.value)}></Form.Control>\n        {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n         <Form.File id=\"image-file\" label=\"choose file\" custom onChange={uploadFileHandler}>\n           {uploading &&<Loader/>}\n         </Form.File>\n       </Form.Group>\n\n\n  {/*4*/}      <Form.Group controlId='brand'>\n\n              <Form.Label>  Brand </Form.Label>\n              <Form.Control type='text' placeholder=\"Enter brand\" value={brand} onChange={(e)=>setBrand(e.target.value)}></Form.Control>\n               {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n             </Form.Group>\n\n\n {/*5*/}        <Form.Group controlId='countInStock'>\n\n                <Form.Label>  Count in Stock </Form.Label>\n                <Form.Control type='number' placeholder=\"Enter count in stock\" value={countInStock} onChange={(e)=>setCountInStock(e.target.value)}></Form.Control>\n                     {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n             </Form.Group>\n\n {/*6*/}        <Form.Group controlId='category'>\n\n                <Form.Label>  Category </Form.Label>\n                <Form.Control type='text' placeholder=\"Enter category\" value={category} onChange={(e)=>setCategory(e.target.value)}></Form.Control>\n                                 {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n               </Form.Group>\n\n{/*7*/}       <Form.Group controlId='description'>\n\n                  <Form.Label>  Description</Form.Label>\n                  <Form.Control type='text' placeholder=\"Enter description\" value={description} onChange={(e)=>setDescription(e.target.value)}></Form.Control>\n                                               {/*the value of form control is form control from the state. You need to read about form group from react bootstrap*/}\n                 </Form.Group>\n\n\n\n        <Button type='submit' variant='primary'>Update</Button>\n      </Form>\n    )}\n\n     {/*{message && <Message variant='danger'>{message}</Message>}\n     {error && <Message variant='danger'>{error}</Message>}\n     {loading && <Loader/>}*/}\n\n\n\n\n    </FormContainer>\n        </>\n\n\n\n    )\n\n}\n\nexport default UpdateCabaScreen\n"]},"metadata":{},"sourceType":"module"}