{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message.js';\nimport Loader from '../components/Message.js';\nimport showAccountDetails from '../actions/accountActions.js';\nimport FormContainer from '../components/FormContainer.js';\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  //he is taking location & history out of the props, normally it is props.location\n  const [accountNumber, setAccountNumber] = useState(''); //component level state right here, not application level state\n\n  /*const [password,setPassword] = useState('')\n  const dispatch = useDispatch() \n  const userLogin = useSelector(state => state.userLogin);\n  const {loading, error,userInfo } = userLogin*/\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'; //location .search has the url query string, study it a bit\n  //because we dont want to able to come into the login screen ONCE WE ARE ALREADY LOGGED IN, effect this in the useEffect below\n\n  /*useEffect( () => {\n    if(userInfo){ //cuz user info exists only when you're logged in\n       history.push(redirect)\n    }\n  },[redirect,history,userInfo])*/\n\n  /* const submitHandler = (e) => {\n           e.preventDefault()\n           //this is where we want to to call our action to dispatch login\n         dispatch(showAccountDetails(accountNumber))\n   }*/\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    className: \"containerBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"welcomeFont\",\n      children: \"Welcome to Bridgeway Kids!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"accountNumber\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"  Account Number: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"input\",\n          placeholder: \"enter your account number\",\n          value: accountNumber,\n          onChange: e => setAccountNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/viewbalance/${accountNumber}`,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"View Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 8\n  }, this);\n};\n\n_s(LoginScreen, \"l3HiL9iN5rVhzgYTgBxN+WK4E1U=\");\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/home/dagogo/Desktop/bridgeway-kids/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","Card","useDispatch","useSelector","Message","Loader","showAccountDetails","FormContainer","LoginScreen","location","history","accountNumber","setAccountNumber","redirect","search","split","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,QAA2C,iBAA3C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAAA;;AAAE;AAC7C,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmClB,QAAQ,CAAC,EAAD,CAAjD,CAD2C,CACY;;AACvD;AACF;AACA;AACA;;AAGE,QAAMmB,QAAQ,GAAGJ,QAAQ,CAACK,MAAT,GAAgBL,QAAQ,CAACK,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAhB,GAA8C,GAA/D,CAR2C,CAS7C;AAEA;;AAEE;AACF;AACA;AACA;AACA;;AAIC;AACD;AACA;AACA;AACA;;AAEI,sBACG,QAAC,aAAD;AAAe,IAAA,SAAS,EAAC,cAAzB;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,IAAD;AAAA,8BACC,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,gCAEC,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,IAAI,EAAC,OAAnB;AAA2B,UAAA,WAAW,EAAC,2BAAvC;AAAmE,UAAA,KAAK,EAAEJ,aAA1E;AAAyF,UAAA,QAAQ,EAAGK,CAAD,IAAKJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxH;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAeC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,gBAAeP,aAAc,EAAxC;AAAA,qCAA4C,QAAC,MAAD;AAAS,UAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAfD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA2BH,CAtDD;;GAAMH,W;;KAAAA,W;AAwDN,eAAeA,WAAf","sourcesContent":["import React, {useState ,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form, Button, Row, Col, Card} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message.js'\nimport Loader from '../components/Message.js'\nimport showAccountDetails from '../actions/accountActions.js'\nimport FormContainer from '../components/FormContainer.js'\n\n\n\n\n\nconst LoginScreen = ({location, history}) => { //he is taking location & history out of the props, normally it is props.location\n  const [accountNumber,setAccountNumber] = useState('')  //component level state right here, not application level state\n  /*const [password,setPassword] = useState('')\n  const dispatch = useDispatch() \n  const userLogin = useSelector(state => state.userLogin);\n  const {loading, error,userInfo } = userLogin*/\n  \n\n  const redirect = location.search?location.search.split('=')[1]:'/'\n//location .search has the url query string, study it a bit\n\n//because we dont want to able to come into the login screen ONCE WE ARE ALREADY LOGGED IN, effect this in the useEffect below\n\n  /*useEffect( () => {\n    if(userInfo){ //cuz user info exists only when you're logged in\n       history.push(redirect)\n    }\n  },[redirect,history,userInfo])*/\n\n\n\n /* const submitHandler = (e) => {\n          e.preventDefault()\n          //this is where we want to to call our action to dispatch login\n        dispatch(showAccountDetails(accountNumber))\n  }*/\n\n    return (\n       <FormContainer className='containerBox'>\n        <h2 className='welcomeFont'>Welcome to Bridgeway Kids!</h2>\n        {/*error && <Message variant='danger'>{error}</Message>*/}\n        {/*loading && <Loader/>*/}\n        <Form >\n         <Form.Group controlId='accountNumber'>\n\n          <Form.Label>  Account Number: </Form.Label>\n          <Form.Control type='input' placeholder=\"enter your account number\" value={accountNumber} onChange={(e)=>setAccountNumber(e.target.value)}></Form.Control>\n           {/*the value of form control is form control from the state. */}\n         </Form.Group>\n\n         {/*<Form.Group controlId='password'>\n\n          <Form.Label>  Password  </Form.Label>\n          <Form.Control type='password' placeholder=\"enter password\" value={password} onChange={(e)=>setPassword(e.target.value)}></Form.Control>\n\n         </Form.Group>*/}\n\n         <Link to={`/viewbalance/${accountNumber}`}> <Button  variant='primary'>View Balance</Button></Link>\n        </Form>         \n\n       </FormContainer>\n\n    )\n\n}\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}